[gd_scene load_steps=18 format=2]

[ext_resource path="res://Main.gd" type="Script" id=1]
[ext_resource path="res://Assets/BG/Background.png" type="Texture" id=2]
[ext_resource path="res://Export.gd" type="Script" id=3]
[ext_resource path="res://Camera2D.gd" type="Script" id=4]
[ext_resource path="res://ui_theme.tres" type="Theme" id=5]
[ext_resource path="res://Scenes/DownloadButton.gd" type="Script" id=6]
[ext_resource path="res://MasterDeckStatus.gd" type="Script" id=7]
[ext_resource path="res://Scenes/ExportButton.gd" type="Script" id=8]
[ext_resource path="res://Scenes/ExportAll.gd" type="Script" id=9]

[sub_resource type="GDScript" id=1]
script/source = "extends LineEdit

# Declare member variables here. Examples:
# var a: int = 2
# var b: String = \"text\"


var reg = RegEx;
# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	reg = RegEx.new();
	reg.compile(\"docs.google.com\\\\/spreadsheets\\\\/d\\\\/([a-zA-Z\\\\-0-9]+)\\\\/edit#gid=([0-9]+)\");
	pass # Replace with function body.



# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta: float) -> void:
#	pass


func _on_LineEdit_text_entered(new_text: String) -> void:
	var result : RegExMatch = reg.search(new_text);
	
	if (!result):
		AppState.master_sheet_code = null;
		AppState.master_sheet_gid = null;
		return;
	
	AppState.master_sheet_code = result.get_string(0);
	AppState.master_sheet_gid = result.get_string(1);
	
	print(\"parsed %s, %s\" % [AppState.master_sheet_code, AppState.master_sheet_gid]);
	
	pass # Replace with function body.
"

[sub_resource type="GDScript" id=2]
script/source = "extends Label

# Declare member variables here. Examples:
# var a: int = 2
# var b: String = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	if (AppState.master_sheet_code && AppState.master_sheet_gid):
		text = \"Url OK\";
	else:
		text = \"Invalid url\";
	pass
"

[sub_resource type="GDScript" id=3]
script/source = "extends Button

# Declare member variables here. Examples:
# var a: int = 2
# var b: String = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	disabled = !AppState.master_deck_ok;
	pass
"

[sub_resource type="GDScript" id=4]
script/source = "extends Button

# Declare member variables here. Examples:
# var a: int = 2
# var b: String = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	disabled = !AppState.import_done;
	pass
"

[sub_resource type="GDScript" id=5]
script/source = "extends LineEdit

# Declare member variables here. Examples:
# var a: int = 2
# var b: String = \"text\"


var reg = RegEx;
# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	reg = RegEx.new();
	reg.compile(\"docs.google.com\\\\/spreadsheets\\\\/d\\\\/([a-zA-Z\\\\-0-9]+)\\\\/edit#gid=([0-9]+)\");
	pass # Replace with function body.



# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta: float) -> void:
#	pass


func _on_LineEdit_text_entered(new_text: String) -> void:
	var result : RegExMatch = reg.search(new_text);
	
	if (!result):
		AppState.download_deck_code = null;
		AppState.download_deck_gid = null;
		return;
	
	AppState.download_deck_code = result.get_string(0);
	AppState.download_deck_gid = result.get_string(1);
	
	print(\"parsed %s, %s\" % [AppState.download_deck_code, AppState.download_deck_gid]);
	
	pass # Replace with function body.
"

[sub_resource type="GDScript" id=6]
script/source = "extends LineEdit


# Declare member variables here. Examples:
# var a: int = 2
# var b: String = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta: float) -> void:
#	pass


func _on_LineEdit2_text_changed(new_text: String) -> void:
	AppState.download_deck_name = new_text;
	pass # Replace with function body.
"

[sub_resource type="GDScript" id=7]
script/source = "extends ItemList

# Declare member variables here. Examples:
# var a: int = 2
# var b: String = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	for i in range(32):
		add_item(\"Item %d\" % i);
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta: float) -> void:
#	pass
"

[sub_resource type="GDScript" id=8]
script/source = "extends Button

# Declare member variables here. Examples:
# var a: int = 2
# var b: String = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta: float) -> void:
#	pass


func _on_Button_pressed() -> void:
	OS.shell_open(str(\"file://\", OS.get_user_data_dir()));
	pass # Replace with function body.
"

[node name="Board" type="Node2D"]
script = ExtResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
position = Vector2( -1732, -1736 )
texture = ExtResource( 2 )
centered = false
region_enabled = true
region_rect = Rect2( 0, 0, 5000, 5000 )

[node name="Control" type="Control" parent="."]
margin_left = 1.0
margin_right = 599.0
margin_bottom = 395.0

[node name="Viewport" type="Viewport" parent="Control"]
arvr = true
size = Vector2( 1024, 1024 )
own_world = true
transparent_bg = true
handle_input_locally = false
disable_3d = true
keep_3d_linear = true
usage = 0
render_target_v_flip = true
render_target_clear_mode = 2
render_target_update_mode = 3
gui_disable_input = true

[node name="RenderCam" type="Camera2D" parent="Control/Viewport"]
script = ExtResource( 3 )

[node name="Camera2D" type="Camera2D" parent="."]
current = true
drag_margin_left = 0.0
drag_margin_top = 0.0
drag_margin_right = 0.0
drag_margin_bottom = 0.0
script = ExtResource( 4 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Panel" type="Panel" parent="CanvasLayer"]
anchor_bottom = 1.0
margin_right = 265.0
size_flags_horizontal = 3
size_flags_vertical = 3
theme = ExtResource( 5 )

[node name="PanelContainer" type="PanelContainer" parent="CanvasLayer/Panel"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="VBoxContainer" type="VBoxContainer" parent="CanvasLayer/Panel/PanelContainer"]
margin_left = 6.0
margin_top = 4.0
margin_right = 259.0
margin_bottom = 896.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="TabContainer" type="TabContainer" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer"]
margin_right = 253.0
margin_bottom = 866.0
size_flags_horizontal = 3
size_flags_vertical = 3
tab_align = 0

[node name="Master Deck" type="Tabs" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 5.0
margin_top = 29.0
margin_right = -5.0
margin_bottom = -5.0

[node name="VBoxContainer" type="VBoxContainer" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Master Deck"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="LineEdit" type="LineEdit" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Master Deck/VBoxContainer"]
margin_right = 243.0
margin_bottom = 22.0
clear_button_enabled = true
placeholder_text = "url"
script = SubResource( 1 )

[node name="UrlStatus" type="Label" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Master Deck/VBoxContainer"]
margin_top = 26.0
margin_right = 243.0
margin_bottom = 48.0
script = SubResource( 2 )

[node name="Download" type="Button" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Master Deck/VBoxContainer"]
margin_top = 52.0
margin_right = 243.0
margin_bottom = 74.0
text = "Download"
script = ExtResource( 6 )

[node name="MasterDeckStatus" type="Label" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Master Deck/VBoxContainer"]
margin_top = 78.0
margin_right = 243.0
margin_bottom = 100.0
text = "MasterDeck.csv : Not present"
script = ExtResource( 7 )

[node name="HSeparator" type="HSeparator" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Master Deck/VBoxContainer"]
margin_top = 104.0
margin_right = 243.0
margin_bottom = 108.0

[node name="Import" type="Button" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Master Deck/VBoxContainer"]
margin_top = 112.0
margin_right = 243.0
margin_bottom = 134.0
text = "Import"
script = SubResource( 3 )

[node name="Export" type="Button" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Master Deck/VBoxContainer"]
margin_top = 138.0
margin_right = 243.0
margin_bottom = 160.0
text = "Export"
script = SubResource( 4 )

[node name="Play Decks" type="Tabs" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 5.0
margin_top = 29.0
margin_right = -5.0
margin_bottom = -5.0

[node name="VBoxContainer" type="VBoxContainer" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="GridContainer" type="GridContainer" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer"]
margin_right = 243.0
margin_bottom = 48.0
columns = 2

[node name="Url" type="Label" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer/GridContainer"]
margin_right = 76.0
margin_bottom = 22.0
text = "Url"

[node name="LineEdit" type="LineEdit" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer/GridContainer"]
margin_left = 80.0
margin_right = 243.0
margin_bottom = 22.0
size_flags_horizontal = 3
custom_constants/minimum_spaces = 0
clear_button_enabled = true
script = SubResource( 5 )

[node name="Label2" type="Label" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer/GridContainer"]
margin_top = 26.0
margin_right = 76.0
margin_bottom = 48.0
text = "Deckname"

[node name="LineEdit2" type="LineEdit" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer/GridContainer"]
margin_left = 80.0
margin_top = 26.0
margin_right = 243.0
margin_bottom = 48.0
custom_constants/minimum_spaces = 0
clear_button_enabled = true
script = SubResource( 6 )

[node name="Download" type="Button" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer"]
margin_top = 52.0
margin_right = 243.0
margin_bottom = 74.0
text = "Download"
script = ExtResource( 6 )
is_deck_download = true

[node name="HSeparator" type="HSeparator" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer"]
margin_top = 78.0
margin_right = 243.0
margin_bottom = 82.0

[node name="Label" type="Label" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer"]
margin_top = 86.0
margin_right = 243.0
margin_bottom = 108.0
text = "Available decks"

[node name="Re-Scan" type="Button" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer"]
margin_top = 112.0
margin_right = 243.0
margin_bottom = 134.0
text = "Re-Scan"

[node name="ItemList" type="ItemList" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer"]
margin_top = 138.0
margin_right = 243.0
margin_bottom = 754.0
size_flags_horizontal = 3
size_flags_vertical = 3
script = SubResource( 7 )

[node name="Re-Download" type="Button" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer"]
margin_top = 758.0
margin_right = 243.0
margin_bottom = 780.0
disabled = true
text = "Re-Download"

[node name="Export" type="Button" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer"]
margin_top = 784.0
margin_right = 243.0
margin_bottom = 806.0
text = "Export"
script = ExtResource( 8 )

[node name="Delete" type="Button" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer"]
margin_top = 810.0
margin_right = 243.0
margin_bottom = 832.0
disabled = true
text = "Delete"

[node name="HSeparator2" type="HSeparator" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer"]
margin_top = 784.0
margin_right = 40.0
margin_bottom = 788.0

[node name="ExportAll" type="Button" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer"]
margin_top = 784.0
margin_right = 243.0
margin_bottom = 806.0
text = "Export"
script = ExtResource( 9 )

[node name="Button" type="Button" parent="CanvasLayer/Panel/PanelContainer/VBoxContainer"]
margin_top = 870.0
margin_right = 253.0
margin_bottom = 892.0
text = "Open User Dir"
script = SubResource( 8 )

[node name="CardDB" type="Node2D" parent="."]
[connection signal="text_entered" from="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Master Deck/VBoxContainer/LineEdit" to="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Master Deck/VBoxContainer/LineEdit" method="_on_LineEdit_text_entered"]
[connection signal="pressed" from="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Master Deck/VBoxContainer/Download" to="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Master Deck/VBoxContainer/Download" method="_on_Download_pressed"]
[connection signal="pressed" from="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Master Deck/VBoxContainer/Import" to="." method="_on_Import_pressed"]
[connection signal="pressed" from="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Master Deck/VBoxContainer/Export" to="Control/Viewport/RenderCam" method="_on_Export_pressed"]
[connection signal="text_changed" from="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer/GridContainer/LineEdit" to="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer/GridContainer/LineEdit" method="_on_LineEdit_text_changed"]
[connection signal="text_changed" from="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer/GridContainer/LineEdit2" to="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer/GridContainer/LineEdit2" method="_on_LineEdit2_text_changed"]
[connection signal="pressed" from="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer/Download" to="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer/Download" method="_on_Download_pressed"]
[connection signal="pressed" from="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer/Export" to="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer/Export" method="_on_Export_pressed"]
[connection signal="pressed" from="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer/ExportAll" to="CanvasLayer/Panel/PanelContainer/VBoxContainer/TabContainer/Play Decks/VBoxContainer/ExportAll" method="_on_Export_pressed"]
[connection signal="pressed" from="CanvasLayer/Panel/PanelContainer/VBoxContainer/Button" to="CanvasLayer/Panel/PanelContainer/VBoxContainer/Button" method="_on_Button_pressed"]
